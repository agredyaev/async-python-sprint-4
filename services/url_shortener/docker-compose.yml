x-default: &default
  restart: unless-stopped
  networks:
  - ${NETWORK_NAME}
  env_file:
  - .env
  depends_on:
    python_base:
      condition: service_completed_successfully

x-service-prefix: &prefix ${SERVICE_PREFIX}

services:
  app_backend:
    <<: *default
    build: .
    container_name: << *prefix >>_app_backend
    ports:
    - ${APP_PORT}:${APP_PORT}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    <<: *default
    image: postgres:${POSTGRES_VERSION}
    container_name: << *prefix >>_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [CMD-SHELL, 'pg_isready -U ${DB_USER}']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
    - << *prefix >>_data_pg:/var/lib/postgresql/data

volumes:
  << *prefix >>_data_pg:

networks:
  << *prefix >>_network:
    name: ${NETWORK_NAME}
